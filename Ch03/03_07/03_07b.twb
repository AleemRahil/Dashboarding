<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2022-01-01#'>
        <calculation class='tableau' formula='#2022-01-01#' />
      </column>
      <column caption='Date Periodicity' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Month&quot;'>
        <calculation class='tableau' formula='&quot;Month&quot;' />
        <members>
          <member value='&quot;Year&quot;' />
          <member value='&quot;Month&quot;' />
          <member value='&quot;Week&quot;' />
        </members>
      </column>
      <column caption='Benchmark Period' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prior Year&quot;'>
        <calculation class='tableau' formula='&quot;Prior Year&quot;' />
        <members>
          <member value='&quot;Adjacent Period&quot;' />
          <member value='&quot;Prior Year&quot;' />
        </members>
      </column>
      <column caption='End Date' datatype='date' name='[Start Date (copy)_213920996126064640]' param-domain-type='any' role='measure' type='quantitative' value='#2022-11-30#'>
        <calculation class='tableau' formula='#2022-11-30#' />
      </column>
    </datasource>
    <datasource caption='Orders (Sample - Superstore)' inline='true' name='federated.1jwph4s0y5y7km1ffyhz80c2lcw2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.0bxeexk1ye0uyc164hbp417l0bbg'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/glynch/Documents/My Tableau Repository/Datasources/2022.2/en_US-US/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0bxeexk1ye0uyc164hbp417l0bbg' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0bxeexk1ye0uyc164hbp417l0bbg' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>5</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_85D77E17F0A8449DB976E9140F3A0746]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_85D77E17F0A8449DB976E9140F3A0746]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_85D77E17F0A8449DB976E9140F3A0746]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_85D77E17F0A8449DB976E9140F3A0746]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_85D77E17F0A8449DB976E9140F3A0746]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_85D77E17F0A8449DB976E9140F3A0746]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_85D77E17F0A8449DB976E9140F3A0746]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_85D77E17F0A8449DB976E9140F3A0746]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_85D77E17F0A8449DB976E9140F3A0746]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_85D77E17F0A8449DB976E9140F3A0746]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_85D77E17F0A8449DB976E9140F3A0746]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_85D77E17F0A8449DB976E9140F3A0746]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_85D77E17F0A8449DB976E9140F3A0746]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_85D77E17F0A8449DB976E9140F3A0746]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_85D77E17F0A8449DB976E9140F3A0746]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_85D77E17F0A8449DB976E9140F3A0746]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_85D77E17F0A8449DB976E9140F3A0746]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_85D77E17F0A8449DB976E9140F3A0746]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_85D77E17F0A8449DB976E9140F3A0746]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_85D77E17F0A8449DB976E9140F3A0746]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_85D77E17F0A8449DB976E9140F3A0746]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Benchmark Date Select' datatype='integer' name='[Calculation_1120551896399192064]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;WHEN &quot;Adjacent Period&quot; THEN [Calculation_918452863083499521]&#13;&#10;WHEN &quot;Prior Year&quot; THEN 365&#13;&#10;END' />
      </column>
      <column caption='Selected Dates Filter' datatype='boolean' name='[Calculation_213920996126425089]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Order Date]&gt;=[Parameters].[Parameter 1] AND [Order Date]&lt;=[Parameters].[Start Date (copy)_213920996126064640]' />
      </column>
      <column caption='Selected Profit' datatype='real' name='[Calculation_213920996126818306]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_213920996126425089] THEN [Profit] END' />
      </column>
      <column caption='Aligned Order Date' datatype='date' name='[Calculation_231935394897346560]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(IF [Calculation_213920996126425089] THEN [Order Date]&#13;&#10;ELSEIF [Calculation_918452863083847682] THEN DATEADD(&quot;day&quot;,[Calculation_1120551896399192064],[Order Date])&#13;&#10;END)' />
      </column>
      <column caption='Aligned Order Date (period)' datatype='date' name='[Calculation_231935394905853954]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Week&quot; THEN DATETRUNC(&quot;week&quot;,[Calculation_231935394897346560])&#13;&#10;WHEN &quot;Month&quot; THEN DATETRUNC(&quot;month&quot;,[Calculation_231935394897346560])&#13;&#10;WHEN &quot;Year&quot; THEN DATETRUNC(&quot;year&quot;,[Calculation_231935394897346560])&#13;&#10;END)' />
      </column>
      <column caption='Selected Days' datatype='integer' name='[Calculation_918452863083499521]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&quot;day&quot;,[Parameters].[Parameter 1],[Parameters].[Start Date (copy)_213920996126064640])+1' />
      </column>
      <column caption='Benchmark Dates Filter' datatype='boolean' name='[Calculation_918452863083847682]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Order Date]&gt;=[Parameters].[Parameter 1]-[Calculation_1120551896399192064] AND [Order Date]&lt;=[Parameters].[Start Date (copy)_213920996126064640]-[Calculation_1120551896399192064]' />
      </column>
      <column caption='Benchmark Profit' datatype='real' name='[Calculation_918452863084195843]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_918452863083847682] THEN [Profit] END' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_85D77E17F0A8449DB976E9140F3A0746]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_213920996126818306]' derivation='Sum' name='[sum:Calculation_213920996126818306:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_918452863084195843]' derivation='Sum' name='[sum:Calculation_918452863084195843:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_918452863084195843:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_213920996126818306:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2022-01-01#'>
          <calculation class='tableau' formula='#2022-01-01#' />
        </column>
        <column caption='Date Periodicity' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Month&quot;'>
          <calculation class='tableau' formula='&quot;Month&quot;' />
        </column>
        <column caption='Benchmark Period' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prior Year&quot;'>
          <calculation class='tableau' formula='&quot;Prior Year&quot;' />
        </column>
        <column caption='End Date' datatype='date' name='[Start Date (copy)_213920996126064640]' param-domain-type='any' role='measure' type='quantitative' value='#2022-11-30#'>
          <calculation class='tableau' formula='#2022-11-30#' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_85D77E17F0A8449DB976E9140F3A0746'>
            <properties context=''>
              <relation connection='excel-direct.0bxeexk1ye0uyc164hbp417l0bbg' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='03_01e'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1jwph4s0y5y7km1ffyhz80c2lcw2' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2022-01-01#'>
              <calculation class='tableau' formula='#2022-01-01#' />
            </column>
            <column caption='End Date' datatype='date' name='[Start Date (copy)_213920996126064640]' param-domain-type='any' role='measure' type='quantitative' value='#2022-11-30#'>
              <calculation class='tableau' formula='#2022-11-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1jwph4s0y5y7km1ffyhz80c2lcw2'>
            <column caption='Selected Dates Filter' datatype='boolean' name='[Calculation_213920996126425089]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Order Date]&gt;=[Parameters].[Parameter 1] AND [Order Date]&lt;=[Parameters].[Start Date (copy)_213920996126064640]' />
            </column>
            <column caption='Selected Profit' datatype='real' name='[Calculation_213920996126818306]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_213920996126425089] THEN [Profit] END' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_213920996126818306]' derivation='Sum' name='[sum:Calculation_213920996126818306:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_213920996126818306:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{5922F84B-DECB-4D3C-903A-2E38EE4D717F}' />
    </worksheet>
    <worksheet name='03_02e'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1jwph4s0y5y7km1ffyhz80c2lcw2' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2022-01-01#'>
              <calculation class='tableau' formula='#2022-01-01#' />
            </column>
            <column caption='Benchmark Period' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prior Year&quot;'>
              <calculation class='tableau' formula='&quot;Prior Year&quot;' />
            </column>
            <column caption='End Date' datatype='date' name='[Start Date (copy)_213920996126064640]' param-domain-type='any' role='measure' type='quantitative' value='#2022-11-30#'>
              <calculation class='tableau' formula='#2022-11-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1jwph4s0y5y7km1ffyhz80c2lcw2'>
            <column caption='Benchmark Date Select' datatype='integer' name='[Calculation_1120551896399192064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;WHEN &quot;Adjacent Period&quot; THEN [Calculation_918452863083499521]&#13;&#10;WHEN &quot;Prior Year&quot; THEN 365&#13;&#10;END' />
            </column>
            <column caption='Selected Dates Filter' datatype='boolean' name='[Calculation_213920996126425089]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Order Date]&gt;=[Parameters].[Parameter 1] AND [Order Date]&lt;=[Parameters].[Start Date (copy)_213920996126064640]' />
            </column>
            <column caption='Selected Profit' datatype='real' name='[Calculation_213920996126818306]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_213920996126425089] THEN [Profit] END' />
            </column>
            <column caption='Selected Days' datatype='integer' name='[Calculation_918452863083499521]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&quot;day&quot;,[Parameters].[Parameter 1],[Parameters].[Start Date (copy)_213920996126064640])+1' />
            </column>
            <column caption='Benchmark Dates Filter' datatype='boolean' name='[Calculation_918452863083847682]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Order Date]&gt;=[Parameters].[Parameter 1]-[Calculation_1120551896399192064] AND [Order Date]&lt;=[Parameters].[Start Date (copy)_213920996126064640]-[Calculation_1120551896399192064]' />
            </column>
            <column caption='Benchmark Profit' datatype='real' name='[Calculation_918452863084195843]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_918452863083847682] THEN [Profit] END' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_213920996126818306]' derivation='Sum' name='[sum:Calculation_213920996126818306:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_918452863084195843]' derivation='Sum' name='[sum:Calculation_918452863084195843:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_918452863084195843:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_213920996126818306:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[:Measure Names]</rows>
        <cols>[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{56502C0B-9EF5-4038-8857-191425391BC4}' />
    </worksheet>
    <worksheet name='03_03e'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1jwph4s0y5y7km1ffyhz80c2lcw2' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2022-01-01#'>
              <calculation class='tableau' formula='#2022-01-01#' />
            </column>
            <column caption='Benchmark Period' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prior Year&quot;'>
              <calculation class='tableau' formula='&quot;Prior Year&quot;' />
            </column>
            <column caption='End Date' datatype='date' name='[Start Date (copy)_213920996126064640]' param-domain-type='any' role='measure' type='quantitative' value='#2022-11-30#'>
              <calculation class='tableau' formula='#2022-11-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1jwph4s0y5y7km1ffyhz80c2lcw2'>
            <column caption='Benchmark Date Select' datatype='integer' name='[Calculation_1120551896399192064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;WHEN &quot;Adjacent Period&quot; THEN [Calculation_918452863083499521]&#13;&#10;WHEN &quot;Prior Year&quot; THEN 365&#13;&#10;END' />
            </column>
            <column caption='Selected Dates Filter' datatype='boolean' name='[Calculation_213920996126425089]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Order Date]&gt;=[Parameters].[Parameter 1] AND [Order Date]&lt;=[Parameters].[Start Date (copy)_213920996126064640]' />
            </column>
            <column caption='Selected Profit' datatype='real' name='[Calculation_213920996126818306]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_213920996126425089] THEN [Profit] END' />
            </column>
            <column caption='Aligned Order Date' datatype='date' name='[Calculation_231935394897346560]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(IF [Calculation_213920996126425089] THEN [Order Date]&#13;&#10;ELSEIF [Calculation_918452863083847682] THEN DATEADD(&quot;day&quot;,[Calculation_1120551896399192064],[Order Date])&#13;&#10;END)' />
            </column>
            <column caption='Selected Days' datatype='integer' name='[Calculation_918452863083499521]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&quot;day&quot;,[Parameters].[Parameter 1],[Parameters].[Start Date (copy)_213920996126064640])+1' />
            </column>
            <column caption='Benchmark Dates Filter' datatype='boolean' name='[Calculation_918452863083847682]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Order Date]&gt;=[Parameters].[Parameter 1]-[Calculation_1120551896399192064] AND [Order Date]&lt;=[Parameters].[Start Date (copy)_213920996126064640]-[Calculation_1120551896399192064]' />
            </column>
            <column caption='Benchmark Profit' datatype='real' name='[Calculation_918452863084195843]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_918452863083847682] THEN [Profit] END' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_213920996126818306]' derivation='Sum' name='[sum:Calculation_213920996126818306:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_918452863084195843]' derivation='Sum' name='[sum:Calculation_918452863084195843:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_231935394897346560]' derivation='Month-Trunc' name='[tmn:Calculation_231935394897346560:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_918452863084195843:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_213920996126818306:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_918452863084195843:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_213920996126818306:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_918452863084195843:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_213920996126818306:qk] + [federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_918452863084195843:qk])</rows>
        <cols>[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[tmn:Calculation_231935394897346560:qk]</cols>
      </table>
      <simple-id uuid='{2D884C0B-E8C6-432C-80EE-0EDD12C7743E}' />
    </worksheet>
    <worksheet name='03_04e'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1jwph4s0y5y7km1ffyhz80c2lcw2' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2022-01-01#'>
              <calculation class='tableau' formula='#2022-01-01#' />
            </column>
            <column caption='Date Periodicity' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Month&quot;'>
              <calculation class='tableau' formula='&quot;Month&quot;' />
            </column>
            <column caption='Benchmark Period' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prior Year&quot;'>
              <calculation class='tableau' formula='&quot;Prior Year&quot;' />
            </column>
            <column caption='End Date' datatype='date' name='[Start Date (copy)_213920996126064640]' param-domain-type='any' role='measure' type='quantitative' value='#2022-11-30#'>
              <calculation class='tableau' formula='#2022-11-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1jwph4s0y5y7km1ffyhz80c2lcw2'>
            <column caption='Benchmark Date Select' datatype='integer' name='[Calculation_1120551896399192064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;WHEN &quot;Adjacent Period&quot; THEN [Calculation_918452863083499521]&#13;&#10;WHEN &quot;Prior Year&quot; THEN 365&#13;&#10;END' />
            </column>
            <column caption='Selected Dates Filter' datatype='boolean' name='[Calculation_213920996126425089]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Order Date]&gt;=[Parameters].[Parameter 1] AND [Order Date]&lt;=[Parameters].[Start Date (copy)_213920996126064640]' />
            </column>
            <column caption='Selected Profit' datatype='real' name='[Calculation_213920996126818306]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_213920996126425089] THEN [Profit] END' />
            </column>
            <column caption='Aligned Order Date' datatype='date' name='[Calculation_231935394897346560]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(IF [Calculation_213920996126425089] THEN [Order Date]&#13;&#10;ELSEIF [Calculation_918452863083847682] THEN DATEADD(&quot;day&quot;,[Calculation_1120551896399192064],[Order Date])&#13;&#10;END)' />
            </column>
            <column caption='Aligned Order Date (period)' datatype='date' name='[Calculation_231935394905853954]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Week&quot; THEN DATETRUNC(&quot;week&quot;,[Calculation_231935394897346560])&#13;&#10;WHEN &quot;Month&quot; THEN DATETRUNC(&quot;month&quot;,[Calculation_231935394897346560])&#13;&#10;WHEN &quot;Year&quot; THEN DATETRUNC(&quot;year&quot;,[Calculation_231935394897346560])&#13;&#10;END)' />
            </column>
            <column caption='Selected Days' datatype='integer' name='[Calculation_918452863083499521]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&quot;day&quot;,[Parameters].[Parameter 1],[Parameters].[Start Date (copy)_213920996126064640])+1' />
            </column>
            <column caption='Benchmark Dates Filter' datatype='boolean' name='[Calculation_918452863083847682]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Order Date]&gt;=[Parameters].[Parameter 1]-[Calculation_1120551896399192064] AND [Order Date]&lt;=[Parameters].[Start Date (copy)_213920996126064640]-[Calculation_1120551896399192064]' />
            </column>
            <column caption='Benchmark Profit' datatype='real' name='[Calculation_918452863084195843]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_918452863083847682] THEN [Profit] END' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_231935394905853954]' derivation='None' name='[none:Calculation_231935394905853954:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_213920996126818306]' derivation='Sum' name='[sum:Calculation_213920996126818306:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_918452863084195843]' derivation='Sum' name='[sum:Calculation_918452863084195843:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_918452863084195843:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_213920996126818306:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_213920996126818306:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[:Measure Names]</column>
            <column>[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_213920996126818306:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_918452863084195843:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_918452863084195843:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_213920996126818306:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_918452863084195843:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_213920996126818306:qk] + [federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_918452863084195843:qk])</rows>
        <cols>[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[none:Calculation_231935394905853954:ok]</cols>
      </table>
      <simple-id uuid='{3D063265-4B3A-47A8-8DE8-36B0C7A414A3}' />
    </worksheet>
    <worksheet name='03_05e'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1jwph4s0y5y7km1ffyhz80c2lcw2' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2022-01-01#'>
              <calculation class='tableau' formula='#2022-01-01#' />
            </column>
            <column caption='Date Periodicity' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Month&quot;'>
              <calculation class='tableau' formula='&quot;Month&quot;' />
            </column>
            <column caption='Benchmark Period' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prior Year&quot;'>
              <calculation class='tableau' formula='&quot;Prior Year&quot;' />
            </column>
            <column caption='End Date' datatype='date' name='[Start Date (copy)_213920996126064640]' param-domain-type='any' role='measure' type='quantitative' value='#2022-11-30#'>
              <calculation class='tableau' formula='#2022-11-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1jwph4s0y5y7km1ffyhz80c2lcw2'>
            <column caption='Benchmark Date Select' datatype='integer' name='[Calculation_1120551896399192064]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;WHEN &quot;Adjacent Period&quot; THEN [Calculation_918452863083499521]&#13;&#10;WHEN &quot;Prior Year&quot; THEN 365&#13;&#10;END' />
            </column>
            <column caption='Selected Dates Filter' datatype='boolean' name='[Calculation_213920996126425089]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Order Date]&gt;=[Parameters].[Parameter 1] AND [Order Date]&lt;=[Parameters].[Start Date (copy)_213920996126064640]' />
            </column>
            <column caption='Selected Profit' datatype='real' name='[Calculation_213920996126818306]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_213920996126425089] THEN [Profit] END' />
            </column>
            <column caption='Aligned Order Date' datatype='date' name='[Calculation_231935394897346560]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(IF [Calculation_213920996126425089] THEN [Order Date]&#13;&#10;ELSEIF [Calculation_918452863083847682] THEN DATEADD(&quot;day&quot;,[Calculation_1120551896399192064],[Order Date])&#13;&#10;END)' />
            </column>
            <column caption='Aligned Order Date (period)' datatype='date' name='[Calculation_231935394905853954]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Week&quot; THEN DATETRUNC(&quot;week&quot;,[Calculation_231935394897346560])&#13;&#10;WHEN &quot;Month&quot; THEN DATETRUNC(&quot;month&quot;,[Calculation_231935394897346560])&#13;&#10;WHEN &quot;Year&quot; THEN DATETRUNC(&quot;year&quot;,[Calculation_231935394897346560])&#13;&#10;END)' />
            </column>
            <column caption='Selected Days' datatype='integer' name='[Calculation_918452863083499521]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&quot;day&quot;,[Parameters].[Parameter 1],[Parameters].[Start Date (copy)_213920996126064640])+1' />
            </column>
            <column caption='Benchmark Dates Filter' datatype='boolean' name='[Calculation_918452863083847682]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Order Date]&gt;=[Parameters].[Parameter 1]-[Calculation_1120551896399192064] AND [Order Date]&lt;=[Parameters].[Start Date (copy)_213920996126064640]-[Calculation_1120551896399192064]' />
            </column>
            <column caption='Benchmark Profit' datatype='real' name='[Calculation_918452863084195843]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_918452863083847682] THEN [Profit] END' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_231935394905853954]' derivation='None' name='[none:Calculation_231935394905853954:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_213920996126818306]' derivation='Sum' name='[sum:Calculation_213920996126818306:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_918452863084195843]' derivation='Sum' name='[sum:Calculation_918452863084195843:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_918452863084195843:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_213920996126818306:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_213920996126818306:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[:Measure Names]</column>
            <column>[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_213920996126818306:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_918452863084195843:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_918452863084195843:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_213920996126818306:qk]' scope='rows' value='Profit' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_213920996126818306:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_918452863084195843:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_213920996126818306:qk] + [federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_918452863084195843:qk])</rows>
        <cols>[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[none:Calculation_231935394905853954:ok]</cols>
      </table>
      <simple-id uuid='{FC6588F9-D827-46E0-B483-5D640939CAB0}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='03_01e'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='datetime' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[Start Date (copy)_213920996126064640]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{448D1397-F7C1-40A8-8504-F9AFCB653482}' />
    </window>
    <window class='worksheet' name='03_02e'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='datetime' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[Start Date (copy)_213920996126064640]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{AE8DDEC2-E8E0-4B15-9955-8AAE4582C7EC}' />
    </window>
    <window class='worksheet' name='03_03e'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='datetime' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[Start Date (copy)_213920996126064640]' type='parameter' />
            <card pane-specification-id='1' param='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[tmn:Calculation_231935394897346560:qk]</field>
            <field>[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[tmn:Order Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE1CDBEB-5B5A-4A12-9DEE-77C2BC297BB9}' />
    </window>
    <window class='worksheet' name='03_04e'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='datetime' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[Start Date (copy)_213920996126064640]' type='parameter' />
            <card pane-specification-id='1' param='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[:Measure Names]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[sum:Calculation_918452863084195843:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[none:Calculation_231935394905853954:ok]</field>
            <field>[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[tmn:Calculation_231935394897346560:qk]</field>
            <field>[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[tmn:Order Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D94C923C-B70F-4214-BA5F-38B1E54A9C80}' />
    </window>
    <window class='worksheet' maximized='true' name='03_05e'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='datetime' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[Start Date (copy)_213920996126064640]' type='parameter' />
            <card pane-specification-id='1' param='[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[:Measure Names]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[none:Calculation_231935394905853954:ok]</field>
            <field>[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[tmn:Calculation_231935394897346560:qk]</field>
            <field>[federated.1jwph4s0y5y7km1ffyhz80c2lcw2].[tmn:Order Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FBF5BBE4-AE9B-4720-84AB-798E0DE5DCE4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='03_01e' width='153'>
      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
      D52SqtBQ0ebxAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='115' name='03_02e' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='03_03e' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='03_04e' width='192'>
      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
      iTsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='03_05e' width='384'>
      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
      G77CAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
